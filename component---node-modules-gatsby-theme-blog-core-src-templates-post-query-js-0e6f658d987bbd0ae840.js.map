{"version":3,"sources":["webpack:////home/circleci/project/node_modules/gatsby-plugin-mdx/index.js","webpack:////home/circleci/project/node_modules/@babel/runtime/helpers/defineProperty.js","webpack:////home/circleci/project/node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:////home/circleci/project/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:////home/circleci/project/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:////home/circleci/project/node_modules/gatsby-theme-blog/src/components/post-hero.js","webpack:////home/circleci/project/node_modules/gatsby-theme-blog/src/components/post-title.js","webpack:////home/circleci/project/node_modules/gatsby-theme-blog/src/components/post-date.js","webpack:///./src/gatsby-theme-blog/components/bio-content.jsx","webpack:///./src/gatsby-theme-blog/components/bio.jsx","webpack:////home/circleci/project/node_modules/gatsby-theme-blog/src/components/post-footer.js","webpack:///./src/gatsby-theme-blog/components/post.jsx","webpack:////home/circleci/project/node_modules/gatsby-theme-blog-core/src/templates/post-query.js","webpack:////home/circleci/project/node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/post.js","webpack:////home/circleci/project/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:////home/circleci/project/node_modules/@babel/runtime/helpers/construct.js","webpack:////home/circleci/project/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:////home/circleci/project/node_modules/@babel/runtime/helpers/iterableToArray.js"],"names":["MDXRenderer","require","module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","fn","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","Hero","post","image","childImageSharp","fluid","alt","imageAlt","excerpt","PostTitle","h1","PostDate","p","sx","fontSize","mt","mb","Bio","siteUrl","author","summary","href","Div","Styled","div","data","useStaticQuery","site","siteMetadata","avatar","css","alignItems","fixed","mr","width","minWidth","borderRadius","role","Footer","previous","next","pt","hr","as","flexWrap","justifyContent","listStyle","padding","a","Link","to","slug","rel","title","Post","location","description","imageSource","socialImage","src","keywords","date","body","PostPage","blogPost","query","TypeError","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","push","apply","instance","Function","bind","arguments","arrayLikeToArray","Array","isArray","iter","Symbol","iterator","from"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js-0e6f658d987bbd0ae840.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","import React from \"react\"\nimport Image from \"gatsby-image\"\n\nconst Hero = ({ post }) => (\n  <>\n    {post?.image?.childImageSharp && (\n      <Image\n        fluid={post.image.childImageSharp.fluid}\n        alt={post.imageAlt ? post.imageAlt : post.excerpt}\n      />\n    )}\n  </>\n)\n\nexport default Hero\n","import React from \"react\"\nimport { Styled } from \"theme-ui\"\n\nconst PostTitle = props => <Styled.h1 {...props} />\n\nexport default PostTitle\n","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\n\nconst PostDate = props => (\n  <Styled.p\n    sx={{\n      fontSize: 1,\n      mt: -3,\n      mb: 3,\n    }}\n    {...props}\n  />\n)\n\nexport default PostDate\n","import React, { Fragment } from 'react'\nimport { string } from 'prop-types'\n\nBio.propTypes = {\n  siteUrl: string.isRequired,\n  author: string.isRequired,\n  summary: string.isRequired,\n}\n\nexport default function Bio({ siteUrl, author, summary }) {\n  return (\n    <Fragment>\n      <a href={siteUrl}>{author}</a>\n      <p>{summary}</p>\n    </Fragment>\n  )\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Styled, css, Flex } from 'theme-ui'\nimport BioContent from './bio-content'\n\nconst Div = Styled.div\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n  query {\n    site {\n      siteMetadata {\n        author\n        summary\n        siteUrl\n      }\n    }\n    avatar: file(absolutePath: { regex: \"/avatar.(jpeg|jpg|gif|png)/\" }) {\n      childImageSharp {\n        fixed(width: 48, height: 48) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`)\n  const {\n    site: {\n      siteMetadata: { author, siteUrl, summary },\n    },\n    avatar,\n  } = data\n\n  return (\n    <Flex css={css({ mb: 4, alignItems: 'center' })}>\n      {avatar ? (\n        <Image\n          fixed={avatar.childImageSharp.fixed}\n          alt={author}\n          css={css({\n            mr: 2,\n            mb: 0,\n            width: 48,\n            minWidth: 48,\n            borderRadius: 99999,\n          })}\n        />\n      ) : (\n        <div\n          css={css({\n            mr: 2,\n            mb: 0,\n            width: 48,\n            minWidth: 48,\n            borderRadius: 99999,\n          })}\n          role=\"presentation\"\n        />\n      )}\n      <Div>\n        <BioContent siteUrl={siteUrl} author={author} summary={summary} />\n      </Div>\n    </Flex>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { css, Styled, Flex } from \"theme-ui\"\n\nimport Bio from \"../components/bio\"\n\nconst Footer = ({ previous, next }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    <Styled.hr />\n    <Bio />\n    {(previous || next) && (\n      <Flex\n        as=\"ul\"\n        css={css({\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        })}\n      >\n        <li>\n          {previous && (\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\n              ← {previous.title}\n            </Styled.a>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\n              {next.title} →\n            </Styled.a>\n          )}\n        </li>\n      </Flex>\n    )}\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport PostHero from 'gatsby-theme-blog/src/components/post-hero'\nimport PostTitle from 'gatsby-theme-blog/src/components/post-title'\nimport PostDate from 'gatsby-theme-blog/src/components/post-date'\nimport PostFooter from 'gatsby-theme-blog/src/components/post-footer'\nimport { Layout } from '../../components/layout'\nimport { Head } from '../../components/head'\n\n/* eslint-disable react/prop-types */\nconst Post = ({\n  data: {\n    post,\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location, // eslint-disable-line\n  previous,\n  next,\n}) => (\n  <Layout title={title}>\n    <Head\n      title={post.title}\n      description={post.excerpt}\n      imageSource={post.socialImage\n        ? post.socialImage?.childImageSharp?.fluid.src\n        : post.image?.childImageSharp?.fluid.src}\n      keywords={post.keywords}\n      imageAlt={post.imageAlt}\n    />\n    <main>\n      <PostHero post={post} />\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{post.date}</PostDate>\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </main>\n    <PostFooter {...{ previous, next }} />\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../components/post\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query PostPageQuery($id: String!, $previousId: String, $nextId: String) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      keywords\n      date(formatString: \"MMMM DD, YYYY\")\n      image {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      imageAlt\n      socialImage {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../components/post\"\n\nexport default ({ location, data }) => {\n  const { blogPost, previous, next } = data\n\n  return (\n    <Post\n      data={{ ...data, post: blogPost }}\n      location={location}\n      previous={previous}\n      next={next}\n    />\n  )\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;"],"sourceRoot":""}